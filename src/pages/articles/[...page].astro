---
// @ts-nocheck
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import Navbar from "../../components/Navbar.astro";

export const prerender = true;

interface Article {
  id: string;
  slug: string;
  body: string;
  collection: "writing";
  data: {
    title: string;
    pubDate: Date;
    description?: string;
    category?: string;
    author: string;
    image?: {
      url: string;
      alt: string;
    };
    tags?: string[];
    draft?: boolean;
  };
}
// @ts-expect-error
export async function getStaticPaths({ paginate }) {
  const allPosts: Article[] = await getCollection("articles");
  const publishedPosts = allPosts.filter((post) => !post.data.draft);
  const sortedPages = publishedPosts.sort(
    (a: Article, b: Article) =>
      b.data.pubDate.getTime() - a.data.pubDate.getTime(),
  );

  return paginate(sortedPages, { pageSize: 6 });
}

const { page }: any = Astro.props;

const { prev, next } = page.url;
const currentPage = page.currentPage;
const totalPages = page.lastPage;
---

<MainLayout title="Two Slashes: Articles">
  <Navbar />
  <div class="flex flex-col">
    <div class="mt-12">
      <h6><span class="font-light">all</span> articles</h6>
      <ul class="flex flex-col gap-4 my-12">
        {
          page.data.map((post) => (
            <li>
              <h6>
                <a href={`/articles/${post.slug}`}>{post.data.title}</a>
              </h6>
              <div class="flex items-center text-neutral-400">
                {new Date(post.data.pubDate).toLocaleDateString("en-US")} â€¢
                {post.data.description}
              </div>
            </li>
          ))
        }
      </ul>
      <div class="flex items-center gap-4 w-[20rem]">
        Page {currentPage} of {totalPages}
        <a href={prev} class="transition-all duration-300">Prev </a>
        <a href={next} class="transition-all duration-300"> Next </a>
      </div>
    </div>
  </div>
</MainLayout>
